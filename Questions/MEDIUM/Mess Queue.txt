Problem Statement:

During break time, a queue of schoolchildren, consisting of boys and girls, was formed in the mess. Initially, the children stood in the order they entered the mess. However, the boys started feeling uncomfortable standing in front of the girls in the queue, so they decided to let the girls move forward each second.

The process can be described as follows: If at time x, a boy stands at the i-th position and a girl stands at the (i+1)-th position, then at time x+1, the i-th position will have a girl and the (i+1)-th position will have a boy. Time is measured in seconds.

Given the initial position of the children in the queue, determine the arrangement of the queue after t seconds.

Input:

The input consists of two integers, n and t (1 ≤ n, t ≤ 50), representing the number of children in the queue and the time after which the desired arrangement needs to be determined.

The next line contains a string s, representing the initial arrangement of the schoolchildren. If the i-th position in the queue contains a boy, the i-th character of string s equals "B"; otherwise, it equals "G".

Output:

Print string a, which describes the arrangement of the queue after t seconds. If the i-th position has a boy after the required time, the i-th character of a must equal "B"; otherwise, it must equal "G".

Examples:

Input:
5 1
BGGBG

Output:
GBGGB

Input:
5 2
BGGBG

Output:
GGBGB

Input:
4 1
GGGB

Output:
GGGB

time limit per test: 2 seconds
memory limit per test: 256 megabytes
input: standard input
output: standard output
tags: constructive algorithms, graph matchings, implementation, shortest paths
rating: 800
